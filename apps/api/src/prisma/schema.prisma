datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

generator pothos {
    provider    = "prisma-pothos-types"
    prismaUtils = true
}

model User {
    id        Int         @id() @default(autoincrement())
    firstName String      @default("")
    lastName  String      @default("")
    email     String      @unique() @default("")
    authId    String      @unique() @default("")
    events    UserEvent[] @relation("UserEvent_user")
}

model Artist {
    id        Int           @id() @default(autoincrement())
    createdAt DateTime      @default(now())
    updatedAt DateTime      @updatedAt()
    name      String        @unique() @default("")
    spotifyID String        @unique() @default("")
    events    EventArtist[]
}

model Venue {
    id             Int      @id() @default(autoincrement())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt()
    name           String   @default("")
    address1       String   @default("")
    address2       String   @default("")
    city           String   @default("")
    state          String   @default("")
    zip            String   @default("")
    lat            Float    @unique()
    long           Float    @unique()
    googlePlacesID String   @unique() @default("")
    events         Event[]  @relation("Event_venue")
}

model Event {
    id         Int           @id() @default(autoincrement())
    createdAt  DateTime      @default(now())
    updatedAt  DateTime      @updatedAt()
    name       String        @unique() @default("")
    date       DateTime
    artists    EventArtist[]
    venue      Venue         @relation("Event_venue", fields: [venueId], references: [id])
    venueId    Int           @map("venue")
    userEvents UserEvent[]   @relation("UserEvent_event")

    @@index([venueId])
}

model EventArtist {
    id        Int      @id() @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    event     Event    @relation(fields: [eventId], references: [id])
    eventId   Int
    artist    Artist   @relation(fields: [artistId], references: [id])
    artistId  Int

    @@unique([eventId, artistId])
}

model UserEvent {
    id        Int      @id() @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    user      User     @relation("UserEvent_user", fields: [userId], references: [id])
    userId    Int      @map("user")
    event     Event    @relation("UserEvent_event", fields: [eventId], references: [id])
    eventId   Int      @map("event")
    notes     String   @default("")

    @@unique([userId, eventId])
    @@index([userId])
    @@index([eventId])
}
